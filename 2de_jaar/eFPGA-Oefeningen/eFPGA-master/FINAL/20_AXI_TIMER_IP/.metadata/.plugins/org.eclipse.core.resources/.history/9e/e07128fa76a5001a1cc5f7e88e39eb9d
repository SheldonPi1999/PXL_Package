#include <stdio.h>
#include "sleep.h"
#include "platform.h"

#include "xparameters.h"
#include "xil_printf.h"
#include "xtmrctr.h"

#define TIMER_DEVICE_ID_PL XPAR_TMRCTR_0_DEVICE_ID
#define TMR_LOAD 0x00000000

XTmrCtr TMRInst;

static int led_data;

int main()
{
    init_platform();

	status = XTmrCtr_Initialize(&TMRInst, TIMER_DEVICE_ID_PL);
	int m_timerClockFreq = 1;
	int m_clockPeriodSeconds = 1;

	XTmrCtr_Reset(&TMRInst, 0);
	XTmrCtr_Start($TMRInst, 0);


	if(status != XST_SUCCESS)
	{
		xil_printf("XTmrCtr_Initialize() failed.\r\n");
		return XST_FAILURE;
	}

	XTmrCtr_SetResetValue(&TMRInst, 0, TMR_LOAD);
	XTmrCtr_SetOptions(&TMRInst, 0, XTC_INT_MODE_OPTION | XTC_AUTO_RELOAD_OPTION);
	XTmrCtr_PwmEnable(&TMRInst);
	XTmrCtr_Start(&TMRInst, 0);
	XTmrCtr_PwmConfigure(&TMRInst, 100000000, 50000000);

	XTmrCtr_WriteReg(XPAR_XPS_TIMER_0_BASEADDR, 0, 0, 1);


	while(1)
	{
		start  = XTmrCtr_GetValue(&TMRInst, 0);
		printf("Hierse -> %u\n", start);
		sleep_A9(1);
	}

    cleanup_platform();
    return 0;
}
