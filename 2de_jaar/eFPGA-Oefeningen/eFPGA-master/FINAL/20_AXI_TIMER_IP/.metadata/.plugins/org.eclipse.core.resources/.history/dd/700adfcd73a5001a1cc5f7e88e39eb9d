#include <stdio.h>
#include "sleep.h"
#include "platform.h"

#include "xparameters.h"
#include "xil_printf.h"
#include "xtmrctr.h"

#define TIMER_DEVICE_ID_PL XPAR_TMRCTR_0_DEVICE_ID
#define XPAR_XPS_TIMER_0_BASEADDR 0x83C00000

#define TMR_LOAD 0x00000000

XTmrCtr TMRInst;

static int led_data;

int main()
{
    init_platform();

	led_data = 0;
	int status = 0;
	unsigned int start;

	status = XTmrCtr_Initialize(&TMRInst, TIMER_DEVICE_ID_PL);
	if(status != XST_SUCCESS)
	{
		xil_printf("XTmrCtr_Initialize() failed.\r\n");
		return XST_FAILURE;
	}

	time1 = XTmrCtr_GetValue(&TmrCtrInstancePtr, 0);
	XTmrCtr_Start(&TmrInst, 0);
	XTmrCtr_Stop(&TmrInst, 0);



	/*
	XTmrCtr_SetResetValue(&TMRInst, 0, TMR_LOAD);
	XTmrCtr_SetOptions(&TMRInst, 0, XTC_INT_MODE_OPTION | XTC_AUTO_RELOAD_OPTION);
	XTmrCtr_PwmEnable(&TMRInst);
	XTmrCtr_Start(&TMRInst, 0);
	XTmrCtr_PwmConfigure(&TMRInst, 100000000, 50000000);
	XTmrCtr
	 */

	XTmrCtr_mSetLoadReg(&XTmrCtr->XPAR_XPS_TIMER_0_BASEADDR,0,50000); //para 1khz
	XTmrCtr_mSetLoadReg(0x83C00000,0,50000); //para 1khz

	while(1)
	{


		start  = XTmrCtr_GetValue(&TMRInst, 0);
		printf("Hierse -> %u\n", start);
		sleep_A9(1);
	}

    cleanup_platform();
    return 0;
}
